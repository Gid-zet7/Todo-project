(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>i});var r=t(537),o=t.n(r),A=t(645),a=t.n(A)()(o());a.push([n.id,':root {\n    --background: rgba(85, 214, 170, .85);\n    --bg-color: #8054FF;\n    --btn-color: #6e41f3;\n    --bg-light: #f4f4f4;\n    --font-size: calc(.5em + .5vw);\n\n}\n\n*,\n*::before,\n*::after {\n    box-sizing: border-box;\n}\n\nhtml,\nbody {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n    font-weight: 400;\n    overflow-x: hidden;\n}\n\n.task-modal {\n    display: flex;\n    display: none;\n    justify-content: center;\n    align-items: center;\n    z-index: 1;\n    width: clamp(250px, 80vw, 380px);\n    position: absolute;\n    top: 50%;\n    right: 50%;\n    transform: translate(50%, -50%);\n    padding: 1.5rem;\n    /* border-radius: 1rem 0rem 1rem; */\n    background-color: #fff;\n    /* transition: transform .3s ease-in-out ; */\n}\n\n.task-modal.open {\n    display: block;\n}\n\nform {\n    display: flex;\n    flex-direction: column;\n    position: relative;\n    width: 100%;\n}\n\n#task-form h3 {\n    align-self: center;\n    font-weight: 800;\n    /* position: relative; */\n}\n\n#task-form::after {\n    content: "";\n    position: absolute;\n    width: 100%;\n    height: 1px;\n    top: 4rem;\n    /* right: -4rem; */\n    background-color: #000;\n}\n\n.field > input {\n    margin-top: 1.2rem;\n    width: 100%;\n    height: 2rem;\n    border: none;\n    outline: none;\n    font-size: 1.2rem;\n    border-radius: .3rem 0rem .3rem;\n}\n\n#submit {\n    margin-top: 3rem;\n    padding: .5rem;\n    font-size: 1.3rem;\n    background-color: #1f1f35;\n    position: relative;\n    color: #fff;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    border-radius: .3rem 0rem .3rem;\n    transition: background-color .3s ease-in-out;\n}\n\n#submit:hover {\n    background-color: #1ae094;\n}\n\ninput:valid {\n    background-color: rgb(235, 247, 252);\n}\n\n#project-input {\n    background-color: #fff;\n}\n\ninput:invalid {\n    border-color: rgb(238, 117, 117);\n    background-color: #fdd;\n}\n\ninput:focus:invalid {\n    outline: #000;\n}\n\n/* This is the style of the error messages */\n.error {\n    width: 100%;\n    padding: 0;\n\n    font-size: 80%;\n    color: white;\n    background-color: rgb(253, 77, 77);\n    border-radius: 0 0 5px 5px;\n\n    box-sizing: border-box;\n}\n\n.error.active {\n    padding: 0.1rem;\n}\n\n.overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    display: none;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.overlay.active {\n    display: block;\n}\n\n.container {\n    display: grid;\n    grid-template-rows: 1fr;\n    grid-template-columns: 1fr 4fr;\n\n}\n\n.text-header {\n    grid-column: 1 / 2;\n    display: grid;\n    grid-template-rows: 1fr;\n}\n\n.content {\n    padding: 1.5rem;\n    /* grid-row: 2 / 3; */\n    grid-column: 1 / 2;\n    background-color: #EAF1F1;\n    min-height: 100vh;\n}\n\n.project__content {\n    grid-column: 2 / 3;\n    display: flex;\n    flex-direction: column;\n}\n\n.project__content h1 {\n    align-self: center;\n}\n\n.tasks-list {\n    display: flex;\n    flex-direction: column;\n    margin-left: 3rem;\n    /* align-items: center; */\n}\n\n.tasks-list > div {\n    width: 90%;\n    display: flex;\n    cursor: pointer;\n    margin-top: 1rem;\n    background-color: #f4f4f4;\n    justify-content: space-around;\n    /* transition: transform .1s ease-in-out; */\n    /* transition: background-color .3s ease-in; */\n\n}\n\n.tasks-list > div:hover {\n    /* transform: scale(1.08); */\n    background-color: #9683cf;\n    color: #fff;\n}\n\n.btn-add-task {\n    min-width: 100px;\n    align-self: center;\n    margin-top: 1em;\n    padding: .5rem;\n    font-size: 1.2rem;\n    cursor: pointer;\n    background-color: var(--bg-color);\n    color: #fff;\n    border: none;\n    outline: none;\n    border-radius: .3rem 0rem .3rem;\n    transition: background-color .3s ease-in-out;\n}\n\n.btn-add-task:hover {\n    background-color: #1ae094;\n}\n\n.side-panel h4 {\n    padding: .8rem;\n    user-select: none;\n    cursor: pointer;\n}\n\n#all-tasks {\n    display: flex;\n    align-items: center;\n    gap: .5rem;\n    background-color: var(--bg-light);\n    border-radius: .5rem 0rem .5rem;\n}\n\n#today-tasks {\n    display: flex;\n    align-items: center;\n    gap: .5rem;\n}\n\n#week-tasks {\n    display: flex;\n    align-items: center;\n    gap: .5rem;\n}\n\n\n#today-tasks:hover {\n    background-color: var(--bg-light);\n    border-radius: .5rem 0rem .5rem;\n}\n\n#week-tasks:hover {\n    background-color: var(--bg-light);\n    border-radius: .5rem 0rem .5rem;\n}\n\n.projects > div {\n    cursor: pointer;\n    user-select: none;\n}\n\n#create__project {\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n    padding: .5rem;\n    border-radius: 1rem 0rem 1rem;\n    background-color: var(--bg-light);\n    width: 80%;\n    margin-bottom: 3rem;\n    font-size: var(--font-size);\n    transition: background-color .3s ease-in-out;\n}\n\n#create__project:hover {\n    background-color: #1ae094;\n    color: #fff;\n}\n\n#create__project h3 {\n    margin-right: .7rem;\n}\n\n.side-proj {\n    display: flex;\n    align-items: center;\n    height: 60px;\n    /* padding: .5rem; */\n}\n\n.side-proj h4 {\n    flex: 2;\n    display: flex;\n    align-items: center;\n    gap: .5rem;\n}\n\n.side-proj:hover .delete_project {\n    display: block;\n    height: 75%;\n    border-radius: .5rem 0rem .5rem;\n    background: var(--bg-light);\n}\n\n.delete_project {\n    display: none;\n}\n\n.delete_project:hover {\n    fill: rgb(253, 77, 77)\n}\n\n.side-proj > h4 {\n    padding: .8rem;\n    /* margin-top: 1rem; */\n    cursor: pointer;\n    user-select: none;\n}\n\n.side-proj > h4:hover {\n    background-color: var(--bg-light);\n    border-radius: .5rem 0rem .5rem;\n}\n\n.project-modal {\n    display: none;\n}\n\n.project-modal.active {\n    display: block;\n}\n\n.project-modal > input {\n    margin-top: 1rem;\n    height: 2rem;\n    /* border: none; */\n    outline: none;\n    font-size: 1.2rem;\n    border-radius: .3rem 0rem .3rem;\n}\n\n.project-modal > div {\n    margin-top: 1rem;\n}\n\n.project-modal > div > button {\n    justify-content: space-between;\n    padding: .5rem;\n    font-size: 1rem;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    border-radius: .3rem 0rem .3rem;\n}\n\n#create {\n    background-color: #1ae094;\n}\n\n#create:hover {\n    background-color: #23c587;\n}\n\n#close {\n    background-color: #fa7d7d;\n}\n\n#close:hover {\n    background-color: #f16b6b;\n}\n\n@media screen and (max-width: 680px) {\n    .container {\n        display: flex;\n        \n    }\n\n    .text-header h1 {\n        display: none;\n    }\n\n    .content {\n        padding: 0;\n       /* width: 76px;  */\n    }\n\n    .content .inactive {\n        display: none;\n    }\n\n    .project__content {\n        /* display: none; */\n        flex: 1;\n    }\n\n    .project__content .active {\n        display: block;\n    }\n\n    .side-panel {\n        width: 76px;\n    }\n\n    #all-tasks {\n        padding: 0;\n    }\n\n    #today-tasks {\n        padding: 0;\n    }\n\n    #week-tasks {\n        padding: 0;\n    }\n\n    #Inbox {\n        fill: #1ae094;\n        width: 100%;\n        /* height: 30px; */\n    }\n\n    .today {\n        /* fill: #1ae094; */\n        width: 100%;\n    }\n\n    .upcoming {\n        width: 100%;\n    }\n\n    span {\n        display: none;\n    }\n\n    #create__project {\n        padding: 0;\n        margin: 0 0rem 2rem 0rem;\n        display: flex;\n        align-items: center;\n        background-color: #EAF1F1;\n    }\n\n    #create__project h3 {\n        display: none;\n        margin: 0;\n    }\n\n    .projects {\n        padding: .5rem;\n    }\n\n    .projects h1 {\n        font-size: .8rem;\n        align-self: center;\n    }\n\n    .side-proj {\n        font-size: .7rem;\n    }\n\n    .side-proj h4 {\n        padding: 0;\n    }\n\n    .tasks-list {\n        font-size: .7rem;\n        margin-left: .3rem;\n    }\n\n    .tasks-list > div {\n        align-items: center;\n    }\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:[':root {\n    --background: rgba(85, 214, 170, .85);\n    --bg-color: #8054FF;\n    --btn-color: #6e41f3;\n    --bg-light: #f4f4f4;\n    --font-size: calc(.5em + .5vw);\n\n}\n\n*,\n*::before,\n*::after {\n    box-sizing: border-box;\n}\n\nhtml,\nbody {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n    font-weight: 400;\n    overflow-x: hidden;\n}\n\n.task-modal {\n    display: flex;\n    display: none;\n    justify-content: center;\n    align-items: center;\n    z-index: 1;\n    width: clamp(250px, 80vw, 380px);\n    position: absolute;\n    top: 50%;\n    right: 50%;\n    transform: translate(50%, -50%);\n    padding: 1.5rem;\n    /* border-radius: 1rem 0rem 1rem; */\n    background-color: #fff;\n    /* transition: transform .3s ease-in-out ; */\n}\n\n.task-modal.open {\n    display: block;\n}\n\nform {\n    display: flex;\n    flex-direction: column;\n    position: relative;\n    width: 100%;\n}\n\n#task-form h3 {\n    align-self: center;\n    font-weight: 800;\n    /* position: relative; */\n}\n\n#task-form::after {\n    content: "";\n    position: absolute;\n    width: 100%;\n    height: 1px;\n    top: 4rem;\n    /* right: -4rem; */\n    background-color: #000;\n}\n\n.field > input {\n    margin-top: 1.2rem;\n    width: 100%;\n    height: 2rem;\n    border: none;\n    outline: none;\n    font-size: 1.2rem;\n    border-radius: .3rem 0rem .3rem;\n}\n\n#submit {\n    margin-top: 3rem;\n    padding: .5rem;\n    font-size: 1.3rem;\n    background-color: #1f1f35;\n    position: relative;\n    color: #fff;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    border-radius: .3rem 0rem .3rem;\n    transition: background-color .3s ease-in-out;\n}\n\n#submit:hover {\n    background-color: #1ae094;\n}\n\ninput:valid {\n    background-color: rgb(235, 247, 252);\n}\n\n#project-input {\n    background-color: #fff;\n}\n\ninput:invalid {\n    border-color: rgb(238, 117, 117);\n    background-color: #fdd;\n}\n\ninput:focus:invalid {\n    outline: #000;\n}\n\n/* This is the style of the error messages */\n.error {\n    width: 100%;\n    padding: 0;\n\n    font-size: 80%;\n    color: white;\n    background-color: rgb(253, 77, 77);\n    border-radius: 0 0 5px 5px;\n\n    box-sizing: border-box;\n}\n\n.error.active {\n    padding: 0.1rem;\n}\n\n.overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    display: none;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.overlay.active {\n    display: block;\n}\n\n.container {\n    display: grid;\n    grid-template-rows: 1fr;\n    grid-template-columns: 1fr 4fr;\n\n}\n\n.text-header {\n    grid-column: 1 / 2;\n    display: grid;\n    grid-template-rows: 1fr;\n}\n\n.content {\n    padding: 1.5rem;\n    /* grid-row: 2 / 3; */\n    grid-column: 1 / 2;\n    background-color: #EAF1F1;\n    min-height: 100vh;\n}\n\n.project__content {\n    grid-column: 2 / 3;\n    display: flex;\n    flex-direction: column;\n}\n\n.project__content h1 {\n    align-self: center;\n}\n\n.tasks-list {\n    display: flex;\n    flex-direction: column;\n    margin-left: 3rem;\n    /* align-items: center; */\n}\n\n.tasks-list > div {\n    width: 90%;\n    display: flex;\n    cursor: pointer;\n    margin-top: 1rem;\n    background-color: #f4f4f4;\n    justify-content: space-around;\n    /* transition: transform .1s ease-in-out; */\n    /* transition: background-color .3s ease-in; */\n\n}\n\n.tasks-list > div:hover {\n    /* transform: scale(1.08); */\n    background-color: #9683cf;\n    color: #fff;\n}\n\n.btn-add-task {\n    min-width: 100px;\n    align-self: center;\n    margin-top: 1em;\n    padding: .5rem;\n    font-size: 1.2rem;\n    cursor: pointer;\n    background-color: var(--bg-color);\n    color: #fff;\n    border: none;\n    outline: none;\n    border-radius: .3rem 0rem .3rem;\n    transition: background-color .3s ease-in-out;\n}\n\n.btn-add-task:hover {\n    background-color: #1ae094;\n}\n\n.side-panel h4 {\n    padding: .8rem;\n    user-select: none;\n    cursor: pointer;\n}\n\n#all-tasks {\n    display: flex;\n    align-items: center;\n    gap: .5rem;\n    background-color: var(--bg-light);\n    border-radius: .5rem 0rem .5rem;\n}\n\n#today-tasks {\n    display: flex;\n    align-items: center;\n    gap: .5rem;\n}\n\n#week-tasks {\n    display: flex;\n    align-items: center;\n    gap: .5rem;\n}\n\n\n#today-tasks:hover {\n    background-color: var(--bg-light);\n    border-radius: .5rem 0rem .5rem;\n}\n\n#week-tasks:hover {\n    background-color: var(--bg-light);\n    border-radius: .5rem 0rem .5rem;\n}\n\n.projects > div {\n    cursor: pointer;\n    user-select: none;\n}\n\n#create__project {\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n    padding: .5rem;\n    border-radius: 1rem 0rem 1rem;\n    background-color: var(--bg-light);\n    width: 80%;\n    margin-bottom: 3rem;\n    font-size: var(--font-size);\n    transition: background-color .3s ease-in-out;\n}\n\n#create__project:hover {\n    background-color: #1ae094;\n    color: #fff;\n}\n\n#create__project h3 {\n    margin-right: .7rem;\n}\n\n.side-proj {\n    display: flex;\n    align-items: center;\n    height: 60px;\n    /* padding: .5rem; */\n}\n\n.side-proj h4 {\n    flex: 2;\n    display: flex;\n    align-items: center;\n    gap: .5rem;\n}\n\n.side-proj:hover .delete_project {\n    display: block;\n    height: 75%;\n    border-radius: .5rem 0rem .5rem;\n    background: var(--bg-light);\n}\n\n.delete_project {\n    display: none;\n}\n\n.delete_project:hover {\n    fill: rgb(253, 77, 77)\n}\n\n.side-proj > h4 {\n    padding: .8rem;\n    /* margin-top: 1rem; */\n    cursor: pointer;\n    user-select: none;\n}\n\n.side-proj > h4:hover {\n    background-color: var(--bg-light);\n    border-radius: .5rem 0rem .5rem;\n}\n\n.project-modal {\n    display: none;\n}\n\n.project-modal.active {\n    display: block;\n}\n\n.project-modal > input {\n    margin-top: 1rem;\n    height: 2rem;\n    /* border: none; */\n    outline: none;\n    font-size: 1.2rem;\n    border-radius: .3rem 0rem .3rem;\n}\n\n.project-modal > div {\n    margin-top: 1rem;\n}\n\n.project-modal > div > button {\n    justify-content: space-between;\n    padding: .5rem;\n    font-size: 1rem;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    border-radius: .3rem 0rem .3rem;\n}\n\n#create {\n    background-color: #1ae094;\n}\n\n#create:hover {\n    background-color: #23c587;\n}\n\n#close {\n    background-color: #fa7d7d;\n}\n\n#close:hover {\n    background-color: #f16b6b;\n}\n\n@media screen and (max-width: 680px) {\n    .container {\n        display: flex;\n        \n    }\n\n    .text-header h1 {\n        display: none;\n    }\n\n    .content {\n        padding: 0;\n       /* width: 76px;  */\n    }\n\n    .content .inactive {\n        display: none;\n    }\n\n    .project__content {\n        /* display: none; */\n        flex: 1;\n    }\n\n    .project__content .active {\n        display: block;\n    }\n\n    .side-panel {\n        width: 76px;\n    }\n\n    #all-tasks {\n        padding: 0;\n    }\n\n    #today-tasks {\n        padding: 0;\n    }\n\n    #week-tasks {\n        padding: 0;\n    }\n\n    #Inbox {\n        fill: #1ae094;\n        width: 100%;\n        /* height: 30px; */\n    }\n\n    .today {\n        /* fill: #1ae094; */\n        width: 100%;\n    }\n\n    .upcoming {\n        width: 100%;\n    }\n\n    span {\n        display: none;\n    }\n\n    #create__project {\n        padding: 0;\n        margin: 0 0rem 2rem 0rem;\n        display: flex;\n        align-items: center;\n        background-color: #EAF1F1;\n    }\n\n    #create__project h3 {\n        display: none;\n        margin: 0;\n    }\n\n    .projects {\n        padding: .5rem;\n    }\n\n    .projects h1 {\n        font-size: .8rem;\n        align-self: center;\n    }\n\n    .side-proj {\n        font-size: .7rem;\n    }\n\n    .side-proj h4 {\n        padding: 0;\n    }\n\n    .tasks-list {\n        font-size: .7rem;\n        margin-left: .3rem;\n    }\n\n    .tasks-list > div {\n        align-items: center;\n    }\n}\n'],sourceRoot:""}]);const i=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,A){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(a[s]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);r&&a[d[0]]||(void 0!==A&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=A),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),A="/*# ".concat(o," */");return[e].concat([A]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var A={},a=[],i=0;i<n.length;i++){var s=n[i],c=r.base?s[0]+r.base:s[0],d=A[c]||0,l="".concat(c," ").concat(d);A[c]=d+1;var m=t(l),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==m)e[m].references++,e[m].updater(p);else{var u=o(p,r);r.byIndex=i,e.splice(i,0,{identifier:l,updater:u,references:1})}a.push(l)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var A=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<A.length;a++){var i=t(A[a]);e[i].references--}for(var s=r(n,o),c=0;c<A.length;c++){var d=t(A[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}A=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var A=t.sourceMap;A&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var A=e[r]={id:r,exports:{}};return n[r](A,A.exports,t),A.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},n(e)}function e(n,e){if(e.length<n)throw new TypeError(n+" argument"+(n>1?"s":"")+" required, but only "+e.length+" present")}function r(t){e(1,arguments);var r=Object.prototype.toString.call(t);return t instanceof Date||"object"===n(t)&&"[object Date]"===r?new Date(t.getTime()):"number"==typeof t||"[object Number]"===r?new Date(t):("string"!=typeof t&&"[object String]"!==r||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}function o(n){e(1,arguments);var t=r(n);return t.setHours(0,0,0,0),t}const A=(n,e,t,r)=>({name:n,description:e,dueDate:t,priority:r}),a=n=>({name:n,tasks:[]}),i=()=>{const n=n=>{window.localStorage.setItem("todo",JSON.stringify(n))},t=()=>{const n=Object.assign((()=>{let n=[];return n.push(a("Inbox")),n.push(a("Today Tasks")),n.push(a("Upcoming Tasks")),{projects:n}})(),JSON.parse(localStorage.getItem("todo")));return console.log(n),n};return{save:n,getTodo:t,renameProject:(e,r)=>{const o=t(),A=o.projects.find((n=>n.name===e));console.log(A),A.name=r,n(o)},addProject:e=>{const r=t();r.projects.push(e),n(r)},deleteProject:e=>{const r=t(),o=r.projects.find((n=>n.name===e));r.projects.splice(r.projects.indexOf(o),1),n(r)},addTask:(e,r)=>{const o=t();var A;(A=e,o.projects.find((n=>n.name===A))).tasks.push(r),console.log(o.projects),n(o)},deleteTask:(e,r)=>{const o=t();console.log(`taskName: ${r}`);const A=o.projects.find((n=>n.name===e));console.log(A);const a=o.projects.indexOf(A);console.log(a);const i=o.projects[a].tasks.find((n=>n.name.split(" ").join("")===r));console.log(i),console.log(o.projects[a].tasks.indexOf(i)),o.projects[a].tasks.splice(o.projects[a].tasks.indexOf(i),1),n(o)},updateTodayProject:()=>{const a=t(),i=()=>{let n=[];return a.projects.forEach((t=>{t.tasks.filter((t=>{var A;(function(n){return e(1,arguments),function(n,t){e(2,arguments);var r=o(n),A=o(t);return r.getTime()===A.getTime()}(n,Date.now())})(r(new Date((n=>{const e=n.split("-")[2];return`${n.split("-")[1]}/ ${e}/ ${n.split("-")[0]}`})(t.dueDate))))&&(A=t.name,!a.projects[1].tasks.some((n=>n.name===A)))&&n.push(t)}))})),n};a.projects.forEach((n=>{if("Today Tasks"===n.name||"Upcoming Tasks"===n.name)return;a.projects[1].tasks=[];const e=i();console.log(e),e.forEach((n=>{a.projects[1].tasks.push(A(n.name,n.description,n.dueDate,n.priority))}))})),console.log(a.projects[1].tasks),n(a)}}};var s=t(379),c=t.n(s),d=t(795),l=t.n(d),m=t(569),p=t.n(m),u=t(565),g=t.n(u),C=t(216),I=t.n(C),f=t(589),B=t.n(f),b=t(426),h={};h.styleTagTransform=B(),h.setAttributes=g(),h.insert=p().bind(null,"head"),h.domAPI=l(),h.insertStyleElement=I(),c()(b.Z,h),b.Z&&b.Z.locals&&b.Z.locals,(()=>{function n(n){document.querySelector(".project-list").innerHTML+=`\n    <div class="side-proj">\n      <h4 id="${n}"><svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 -960 960 960" width="24" ><path d="M280-600v-80h560v80H280Zm0 160v-80h560v80H280Zm0 160v-80h560v80H280ZM160-600q-17 0-28.5-11.5T120-640q0-17 11.5-28.5T160-680q17 0 28.5 11.5T200-640q0 17-11.5 28.5T160-600Zm0 160q-17 0-28.5-11.5T120-480q0-17 11.5-28.5T160-520q17 0 28.5 11.5T200-480q0 17-11.5 28.5T160-440Zm0 160q-17 0-28.5-11.5T120-320q0-17 11.5-28.5T160-360q17 0 28.5 11.5T200-320q0 17-11.5 28.5T160-280Z"/></svg>${n}</h4>\n        <svg xmlns="http://www.w3.org/2000/svg" class="delete_project" id="${n}"\n        height="15" viewBox="0 96 960 960" width="20" fill="#8054FF">\n        <path d="m249 849-42-42 231-231-231-231 42-42 231 231 231-231 42 42-231 231 231 231-42 42-231-231-231 231Z"/>\n        </svg>\n      </div>\n    </div>\n    `,document.querySelectorAll(".delete_project").forEach((n=>n.addEventListener("click",(n=>{const t=n.target.id;i().deleteProject(t),document.querySelector(".project-list").textContent="",e()})))),document.querySelectorAll(".side-proj h4").forEach((n=>n.addEventListener("click",l,{capture:!0})))}function e(){i().getTodo().projects.forEach((e=>{"Inbox"!==e.name&&"Today Tasks"!==e.name&&"Upcoming Tasks"!==e.name&&n(e.name)})),document.getElementById("create").addEventListener("click",t),function(){const n=document.getElementById("create__project"),e=document.getElementById("close"),t=document.querySelector(".project-modal ");n.addEventListener("click",(()=>{t.classList.add("active")})),e.addEventListener("click",(()=>{t.classList.remove("active")}))}()}function t(){const e=document.getElementById("project-input"),t=e.value;if(""===t)return void alert("Please enter a name for your project");const r=i();if(o=t,r.getTodo().projects.some((n=>n.name===o)))return e.value="",void alert("Project already exist");var o;r.addProject(a(t)),n(t),e.value=""}function r(n){const e=document.querySelector(".project__content");e.innerHTML=`\n      <h1 id="project-name">${n}</h1>\n      <div class="tasks-list" id="tasks-list"></div>`,"Today Tasks"!==n&&"Upcoming Tasks"!==n&&(e.innerHTML+='\n      <button class="btn-add-task" id="button-add-task">\n        Add Task\n      </button>'),function(n){const e=i().getTodo().projects,t=n=>e.find((e=>e.name===n));console.log(t(n)),t(n).tasks.forEach((n=>o(n.name,n.description,n.dueDate,n.priority))),"Today Tasks"!==n&&"Upcoming Tasks"!==n&&(function(){const n=document.getElementById("submit"),e=document.querySelector(".task-modal"),t=document.getElementById("overlay");n.addEventListener("click",s),n.addEventListener("click",(()=>{e.classList.remove("open"),t.classList.remove("active")}))}(),function(){const n=document.getElementById("button-add-task"),e=document.querySelector(".task-modal"),t=document.getElementById("overlay");n.onclick=()=>{e.classList.add("open"),t.classList.add("active")},t.onclick=()=>{e.classList.remove("open"),t.classList.remove("active")}}())}(n)}function o(n,e,t,r){const o=document.querySelector(".tasks-list"),A=n.split(" ").join("");o.innerHTML+=`\n    <div class="task-ui" id=${A}>\n      <p>${n}</p>\n      <p>${e}</p>\n      <p>${t}</p>\n      <p>${r}</p>\n    </div>\n    `,c()}function s(){const n=document.getElementById("project-name").textContent,e=document.getElementById("title"),t=document.getElementById("description"),r=document.getElementById("dueDate"),a=document.getElementById("priority"),s=e.value,c=t.value,d=r.value,l=a.value;if(""===s)return void alert("Title cannot be empty");const m=i(),u=(n=>m.getTodo().projects.find((e=>e.name===n)))(n).tasks;if(g=s,u.some((n=>n.name===g)))return alert("Task already exists"),void p();var g;m.addTask(n,A(s,c,d,l)),o(s,c,d,l),p()}function c(){const n=document.getElementById("project-name").textContent;document.querySelectorAll(".task-ui").forEach((e=>e.addEventListener("click",(function(e){e.stopPropagation();const t=this.getAttribute("id");i().deleteTask(n,t,title),document.querySelector(".project__content").innerHTML="",r(n)}))),{capture:!0})}function d(n){n.stopPropagation(),r(this.getAttribute("class"))}function l(n){n.stopPropagation(),r(this.getAttribute("id"))}function m(){i().updateTodayProject()}function p(){let n=document.getElementById("title"),e=document.getElementById("description"),t=document.getElementById("dueDate"),r=document.getElementById("priority");n.value="",e.value="",t.value="",r.value=""}return{loadHome:function(){e(),function(){const n=document.getElementById("all-tasks"),e=document.getElementById("today-tasks"),t=document.getElementById("week-tasks");n.addEventListener("click",d),e.addEventListener("click",m),e.addEventListener("click",d),t.addEventListener("click",d)}(),r("Inbox")}}})().loadHome()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,